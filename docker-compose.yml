version: '3'

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    environment:
      TZ: Asia/Tokyo
    ports:
      - "80:80"
      - "443:443"

    volumes:
      #- /etc/letsencrypt/:/etc/letsencrypt/
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./src/apuru/build/web/:/var/www/html/web/
      - ./src/static/:/src/static/
      - ./src/media/:/src/media/
      - ./logs/nginx/:/var/log/nginx/

      - ./dev_configs/.vimrc:/root/.vimrc

    depends_on:
      - python
    env_file:
      - .env

  python:
    container_name: python
    build:
      context: .
      dockerfile: ./python/Dockerfile
    volumes:
      - ./src/backend/:/src/
      - ./src/static/:/static/
      - ./src/media/:/media/
      - ./logs/wsgi/:/var/log/wsgi
      - ./dev_configs/.vimrc:/root/.vimrc
      - ./dev_configs/.bash_aliases:/root/.bash_aliases

    environment:
      PYTHONPATH: /src
      TZ: Asia/Tokyod
    env_file:
      - .env
    tty: true

    #command: python -m manage runserver 0:8001 # for debelopping
    command: bash -c "uwsgi --http :8001 --logto /var/log/wsgi/wsgi.log --static-map /static=/static --module app.wsgi:application --py-autoreload 1"
    depends_on:
      - db

  db:
    container_name: db
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      TZ: 'Asia/Tokyo'
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/conf:${POSTGRES_CONFIG_PATH}
      - ./logs/postgres:${POSTGRES_LOGGING_PATH}

      - ./dev_configs/.vimrc:/root/.vimrc

    command: postgres -c 'config_file=${POSTGRES_CONFIG_PATH}/postgres.conf'
    env_file:
      - .env

